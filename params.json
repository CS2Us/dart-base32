{"name":"Dart-base32","tagline":"Base32 Encoder and Decoder for Dart","body":"[![](https://drone.io/daegalus/dart-base32/status.png)](https://drone.io/daegalus/dart-base32/latest)\r\n\r\n# dart-base32\r\n\r\nSimple base32 encode/decode matching the base32 method used by Google Authenticator.\r\n\r\nFeatures:\r\n\r\n* Encodes and Decodes Base32 strings.\r\n* [Annotated source code](http://daegalus.github.com/dart-base32/base32/base32.html)\r\n\r\n## Getting Started\r\n\r\n### Notes on Windows (currently)\r\n\r\n* Use cmd for pub\r\n\r\n### Pubspec\r\n\r\nThere are 2 options. Directly from git, or from pub.dartlang.org\r\n\r\npub.dartlang.org: (you can use 'any' instead of a version if you just want the latest always)\r\n```yaml\r\ndependencies:\r\n  base32: 0.0.4\r\n```\r\n\r\ndirectly from github:\r\n```yaml\r\ndependencies:\r\n  base32:\r\n    git: https://github.com/Daegalus/dart-base32.git\r\n```\r\n\r\n```dart\r\n#import('https://raw.github.com/Daegalus/dart-base32/master/lib/base32.dart'); //pulls it directly from github.\r\n// OR\r\n#import('package:base32/base32.dart'); //Uses the local one in ./packages/base32/lib/bas32.dart\r\n```\r\n\r\nStart encoding/decoding ...\r\n\r\n```dart\r\n// Encode a hex string to base32\r\nbase32.encodeHexString('48656c6c6f21deadbeef'); // -> 'JBSWY3DPEHPK3PXP'\r\n\r\n// base32 decoding to original string.\r\nbase32.decode(\"JBSWY3DPEHPK3PXP\"); // -> '48656c6c6f21deadbeef'\r\n```\r\n\r\n## API\r\n\r\n### base32.encode(List byteList)\r\n\r\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\r\n\r\n* `byteList` - (List) A list of bytes representing your input.\r\n\r\nReturns `String` representation of the encoded base32.\r\n\r\n### base32.encodeHexString(String hex)\r\n\r\nGenerate and return a RFC4122 v4 UUID.\r\n\r\n* `hexString` - (String) A string of hex values intended to be converted to bytes and encoded.\r\n\r\nReturns `String` representation of the encoded base32\r\n\r\nExample: Encode a hex string.\r\n\r\n```dart\r\nbase32.encodeHexString('48656c6c6f21deadbeef'); // -> 'JBSWY3DPEHPK3PXP'\r\n```\r\n\r\n### base32.decode(String base32)\r\n\r\nDecodes a base32 string back to its original byte values.\r\n\r\n* `base32` - (String) The base32 string you wish to decode.\r\n\r\nReturns `Uint8List` of the decoded data.\r\n\r\nExample: Decode a base32 string, then output it in hex format\r\n\r\n```dart\r\nvar decoded = base32.decode(\"JBSWY3DPEHPK3PXP\");\r\nvar decodedHex = CryptoUtils.bytesToHex(decoded); // -> '48656c6c6f21deadbeef'\r\n```\r\n\r\n## Testing\r\n\r\nIn dartvm\r\n\r\n```\r\ndart test\\base32_test.dart\r\n```\r\n\r\nIn Browser\r\n\r\nAt the moment, this package does not work client-side as it uses server-side only UInt8Lists. I might have to wait till UInt8Arrays and UInt8Lists are merged into 1\r\n\r\n## Release notes\r\nv0.0.4\r\n- Fixes and changes for M3\r\n- New hex to byte converter.\r\nv0.0.3\r\n- Made all functions static.\r\nv0.0.2\r\n- Fixed unittest dependency\r\nv0.0.1\r\n- Initial Documented Release\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}